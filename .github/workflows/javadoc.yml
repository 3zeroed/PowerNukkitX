# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Update javadoc

on:
  push:
    branches:
      - master
      - bleeding

jobs:
  update-javadoc:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
      name: Checkout main code
      with:
        submodules: true
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Generate javadoc
      run: mvn javadoc:javadoc
    - name: Get version
      run: |
        PN_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        PN_VERSION=${PN_VERSION%-CUSTOM}
        echo "Version: $PN_VERSION"
        echo "::set-env name=PN_VERSION::$PN_VERSION"
    - uses: actions/checkout@v2
      name: Checkout last javadoc
      with:
        path: javadoc
        ref: javadoc
    - name: Prepare the javadoc branch
      run: |
        cd javadoc
        git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY
        git checkout javadoc
    - name: Update javadoc
      run: |
        rm -rf "javadoc/$PN_VERSION"
        mkdir -p "javadoc/$PN_VERSION"
        cp -a target/site/apidocs/* "javadoc/$PN_VERSION/"
    - name: Commit the updated javadoc
      run: |
        cd javadoc
        git config --local user.email "github-bot@powernukkit.org"
        git config --local user.name "PowerNukkit Bot"
        git add -A "$PN_VERSION"
        git commit -m "Update javadoc version $PN_VERSION"
        git push
